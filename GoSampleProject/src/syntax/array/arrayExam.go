package main

import (
	"fmt"
)

func main() {
	/*
	var a [5]int // int형이며 길이가 5인 배열 선언

	a[2] = 7     // 배열의 세 번째 요소에 7 대입

	fmt.Println(a) // [0 0 7 0 0]
	
	var a [5]int = [5]int{32, 29, 78, 16, 81} // int형이며 길이가 5인 배열을 선언하고 초기화
	var b = [5]int{32, 29, 78, 16, 81}        // 배열을 선언할 때 자료형과 길이 생략
	c := [5]int{32, 29, 78, 16, 81}           // 배열을 선언할 때 var 키워드, 자료형과 길이 생략
	
	a := [5]int{32, 29, 78, 16, 81} // 배열을 생성하면서 값을 초기화

	b := [5]int{
		32,
		29,
		78,
		16,
		81, // 여러 줄로 나열할 때는 마지막 요소에 콤마를 붙임
	}
	
	c := [...]int{32, 29, 78, 16, 81} // 초기화할 요소가 5개이며 ...을 사용했으므로 배열 크기는 5로 설정됨
	
	d := [...]string{"Maria", "Andrew", "Jonh"} // 초기화할 요소가 3개이며 ...을 사용했으므로 배열 크기는 3으로 설정됨
	
	a := [3][3]int{  // 2차원 배열
		{1, 2, 3},
		{4, 5, 6},
		{7, 8, 9},
	} 
	
	a := [5]int{32, 29, 78, 16, 81}

	for i := 0; i < len(a); i++ { // len 함수로 배열의 길이를 구한 뒤 배열의 길이 만큼 반복
		fmt.Println(a[i])
	}
	
	a := [5]int{32, 29, 78, 16, 81}

	for i, value := range a { // i에는 인덱스, value에는 배열 요소의 값이 들어감
		fmt.Println(i, value)
	}
	
	for _, value := range a { // 인덱스는 생략, value에 배열 요소의 값이 들어감
		fmt.Println(value)
	} */
	
	a := [5]int{1, 2, 3, 4, 5}

	b := a // 배열을 대입하면 배열 전체가 복사됨
	
	fmt.Println(a) // [1, 2, 3, 4, 5]
	fmt.Println(b) // [1, 2, 3, 4, 5]
}